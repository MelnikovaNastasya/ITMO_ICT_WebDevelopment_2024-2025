{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435","text":"<p>\u0412 \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f 5 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u043e \u0441\u0435\u0442\u0435\u0432\u043e\u043c\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e: UDP, TCP, HTTP, \u0447\u0430\u0442, \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 GET/POST. \u0426\u0435\u043b\u044c \u2014 \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u043d\u0430\u0432\u044b\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 <code>socket</code>, \u043f\u043e\u0442\u043e\u043a\u0430\u043c\u0438 \u0438 HTTP.</p>"},{"location":"#_2","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ol> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u2014 UDP Hello  </li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u2014 TCP + \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430  </li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u2014 HTTP + index.html  </li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u2014 \u0427\u0430\u0442  </li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u2014 \u0412\u0435\u0431-\u0436\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a (GET/POST)  </li> <li>\u0412\u044b\u0432\u043e\u0434</li> </ol>"},{"location":"#1-udp-hello","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u2014 UDP Hello","text":"<p>\u0423\u0441\u043b\u043e\u0432\u0438\u0435: \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u00abHello, server\u00bb, \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u00abHello, client\u00bb, \u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: UDP.  </p> <p>\u041a\u043e\u0434 (\u0441\u0435\u0440\u0432\u0435\u0440): </p> <pre><code>import socket\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u0441\u043e\u0437\u0434\u0430\u0451\u043c UDP \u0441\u043e\u043a\u0435\u0442\n\nsock.bind((\"127.0.0.1\", 12345)) # \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443\n\nprint(\"UDP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0436\u0434\u0451\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439...\")\n\nwhile True:\n    data, addr = sock.recvfrom(1024)  # \u0436\u0434\u0451\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, 1024 \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u0430\u043a\u0435\u0442\u0430\n\n    print(\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e:\", data.decode(), \"\u043e\u0442\", addr)\n\n    sock.sendto(\"Hello, client\".encode(), addr) # \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n</code></pre> <p>\u041a\u043e\u0434 (\u043a\u043b\u0438\u0435\u043d\u0442): </p> <pre><code>import socket\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\nserver_address = (\"127.0.0.1\", 12345)\n\nsock.sendto(\"Hello, server\".encode(), server_address) # \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443\n\ndata, _ = sock.recvfrom(1024)\nprint(\"\u041e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\", data.decode())\n\nsock.close()\n</code></pre> <p> </p>"},{"location":"#2-tcp","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u2014  TCP + \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430","text":"<p>\u0423\u0441\u043b\u043e\u0432\u0438\u0435: \u041a\u043b\u0438\u0435\u043d\u0442 \u0432\u0432\u043e\u0434\u0438\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u0435\u043b\u0430\u0435\u0442 \u043e\u0434\u043d\u0443 \u0438\u0437 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0435\u043e\u0440\u0435\u043c\u0443 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430). \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: TCP.</p> <p>\u041a\u043e\u0434 (\u0441\u0435\u0440\u0432\u0435\u0440): </p> <pre><code>import socket\nimport math\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0441\u043e\u0437\u0434\u0430\u0451\u043c TCP \u0441\u043e\u043a\u0435\u0442\n\nsock.bind((\"127.0.0.1\", 12345)) # \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443\n\nsock.listen(1) # 1 = \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n\nprint(\"TCP \u0441\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0451\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435...\")\n\nconn, addr = sock.accept()\nprint(\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f:\", addr)\n\nwhile True:\n    data = conn.recv(1024).decode()\n    if not data:\n        break  # \u0435\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043a\u0440\u044b\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u2014 \u0432\u044b\u0445\u043e\u0434\u0438\u043c\n\n    try:\n        a, b = map(float, data.split())\n        c = math.sqrt(a**2 + b**2)  # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443\n        conn.send(str(c).encode())  # \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0431\u0440\u0430\u0442\u043d\u043e\n    except:\n        conn.send(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u0432\u043e\u0434\u0430!\".encode())\n\nconn.close()\n</code></pre> <p>\u041a\u043e\u0434 (\u043a\u043b\u0438\u0435\u043d\u0442):</p> <pre><code>import socket\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0441\u043e\u0437\u0434\u0430\u0451\u043c TCP \u0441\u043e\u043a\u0435\u0442\n\nsock.connect((\"127.0.0.1\", 12345)) # \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443\n\na = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 a: \")\nb = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 b: \")\n\nsock.send((a + \" \" + b).encode()) # \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \"a b\"\n\nresult = sock.recv(1024).decode() # \u0436\u0434\u0451\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\nprint(\"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:\", result)\n\nsock.close()\n</code></pre> <p> </p>"},{"location":"#3-http-indexhtml","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 - HTTP + index.html","text":"<p>\u0423\u0441\u043b\u043e\u0432\u0438\u0435: \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u0434\u0430\u0451\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d \u0447\u0438\u0442\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.</p> <p>\u041a\u043e\u0434 (\u0441\u0435\u0440\u0432\u0435\u0440): </p> <pre><code>import socket\nimport os\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((\"127.0.0.1\", 8081))\nsock.listen(1)\n\nprint(\"HTTP \u0441\u0435\u0440\u0432\u0435\u0440 \u0436\u0434\u0451\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 http://127.0.0.1:8081/ ...\")\n\nwhile True:\n    conn, addr = sock.accept()\n    request = conn.recv(1024).decode()\n    print(\"\u0417\u0430\u043f\u0440\u043e\u0441:\\n\", request)\n\n    try:\n        path = request.split(\" \")[1]\n    except:\n        path = \"/\"\n\n    if path == \"/\":\n        path = \"/index.html\"\n\n    file_path = path.lstrip(\"/\")\n\n    if os.path.exists(file_path):\n        with open(file_path, \"rb\") as f:\n            content = f.read()\n        if file_path.endswith(\".html\"):\n            content_type = \"text/html\"\n        elif file_path.endswith(\".jpg\") or file_path.endswith(\".jpeg\"):\n            content_type = \"image/jpeg\"\n        else:\n            content_type = \"application/octet-stream\"\n\n        response = f\"HTTP/1.1 200 OK\\nContent-Type: {content_type}\\n\\n\".encode() + content\n    else:\n        response = \"HTTP/1.1 404 Not Found\\nContent-Type: text/plain\\n\\n\u0424\u0430\u0439\u043b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\".encode()\n\n    conn.send(response)\n    conn.close()\n</code></pre> <p>index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u041c\u043e\u0439 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 Python&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            margin: 0;\n            font-family: Arial, sans-serif;\n            background: #87CEFA;\n            color: #000;\n            text-align: center;\n        }\n        header {\n            background: #4682B4;\n            color: white;\n            padding: 20px;\n            font-size: 28px;\n            font-weight: bold;\n            letter-spacing: 1px;\n        }\n        main {\n            margin: 40px auto;\n            max-width: 600px;\n            background: #f0f8ff;\n            color: #000;\n            padding: 30px;\n            border-radius: 15px;\n            box-shadow: 0 0 15px rgba(0,0,0,0.3);\n        }\n        h1 {\n            font-size: 36px;\n            margin-bottom: 20px;\n            color: #000080;\n        }\n        img {\n            max-width: 300px;\n            margin-top: 20px;\n            border-radius: 10px;\n            box-shadow: 0 0 10px rgba(0,0,0,0.4);\n        }\n        .caption {\n            margin-top: 10px;\n            font-size: 16px;\n            font-style: italic;\n            color: #333;\n        }\n        footer {\n            margin-top: 40px;\n            padding: 15px;\n            font-size: 14px;\n            background: #4682B4;\n            color: white;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        \u0421\u0435\u0440\u0432\u0435\u0440\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;h1&gt;DU-DU-DU&lt;/h1&gt;\n        &lt;img src=\"verstappen_sid.jpg\" alt=\"Sid Verstappen\"&gt;\n        &lt;div class=\"caption\"&gt;33 Verstappen &lt;/div&gt;\n    &lt;/main&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p></p>"},{"location":"#4","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u2014 \u0427\u0430\u0442","text":"<p>\u0423\u0441\u043b\u043e\u0432\u0438\u0435: \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0447\u0435\u0440\u0435\u0437 TCP \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u0432. \u041a\u043e\u0434 (\u0441\u0435\u0440\u0432\u0435\u0440):</p> <pre><code>import socket\nimport threading\n\nclients = {}  # \u0441\u043b\u043e\u0432\u0430\u0440\u044c: conn -&gt; \u0438\u043c\u044f\n\ndef handle_client(conn, addr):\n    try:\n        nickname = conn.recv(1024).decode(\"utf-8\", errors=\"ignore\") # \u043f\u0435\u0440\u0432\u044b\u043c \u0434\u0435\u043b\u043e\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043d\u0438\u043a \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n        clients[conn] = nickname\n        print(f\"[+] {nickname} \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u0441 {addr}\")\n\n        broadcast(f\"\ud83d\udce2 {nickname} \u0432\u043e\u0448\u0451\u043b \u0432 \u0447\u0430\u0442\", conn) # \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u043c \u0432\u0441\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438\n\n        while True:\n            msg = conn.recv(1024).decode(\"utf-8\", errors=\"ignore\")\n            if not msg:\n                break\n            print(f\"[{nickname}]: {msg}\")\n            broadcast(f\"[{nickname}]: {msg}\", conn)\n\n    except:\n        pass\n    finally:\n        if conn in clients: # \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n            name = clients[conn]\n            print(f\"[-] {name} \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f\")\n            broadcast(f\"\ud83d\udce2 {name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442\", conn)\n            del clients[conn]\n        conn.close()\n\ndef broadcast(message, sender_conn=None):\n    \"\"\"\u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c, \u043a\u0440\u043e\u043c\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f\"\"\"\n    for c in list(clients.keys()):\n        if c != sender_conn:\n            try:\n                c.send(message.encode(\"utf-8\", errors=\"ignore\"))\n            except:\n                c.close()\n                del clients[c]\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((\"127.0.0.1\", 12345))\nsock.listen()\n\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0447\u0430\u0442\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d...\")\n\nwhile True:\n    conn, addr = sock.accept()\n    thread = threading.Thread(target=handle_client, args=(conn, addr))\n    thread.start()\n</code></pre> <p>\u041a\u043e\u0434 (\u043a\u043b\u0438\u0435\u043d\u0442):</p> <pre><code>import socket\nimport threading\n\ndef receive(sock):\n    while True:\n        try:\n            msg = sock.recv(1024).decode(\"utf-8\", errors=\"ignore\")\n            if msg:\n                print(msg)\n            else:\n                break\n        except:\n            break\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect((\"127.0.0.1\", 12345))\n\nnickname = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 \u043d\u0438\u043a: \") # \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c \u0438\u043c\u044f\nsock.send(nickname.encode(\"utf-8\", errors=\"ignore\"))\n\nthread = threading.Thread(target=receive, args=(sock,)) # \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043f\u0440\u0438\u0451\u043c\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439\nthread.start()\n\nprint(\"\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\")\nwhile True:\n    msg = input()\n    sock.send(msg.encode(\"utf-8\", errors=\"ignore\"))\n</code></pre> <p></p>"},{"location":"#5-get-post","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u2014 \u0412\u0435\u0431-\u0436\u0443\u0440\u043d\u0430\u043b \u0441 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438 (GET / POST)","text":"<p>\u0423\u0441\u043b\u043e\u0432\u0438\u0435: \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0447\u0435\u0440\u0435\u0437 POST \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 + \u043e\u0446\u0435\u043d\u043a\u0443, \u0445\u0440\u0430\u043d\u0438\u0442 \u0438\u0445, \u0430 \u043f\u0440\u0438 GET \u043e\u0442\u0434\u0430\u0451\u0442 HTML \u0441 \u0436\u0443\u0440\u043d\u0430\u043b\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c. \u041a\u043e\u0434 (\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u0446\u0435\u043d\u043e\u043a):</p> <pre><code>import socket\nfrom urllib.parse import parse_qs\n\ngrades = {}\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((\"127.0.0.1\", 8082))  # \u043f\u043e\u0440\u0442 8082\nsock.listen(1)\n\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://127.0.0.1:8082/\")\n\nwhile True:\n    conn, addr = sock.accept()\n    request = conn.recv(1024).decode(\"utf-8\", errors=\"ignore\")\n    print(\"\u0417\u0430\u043f\u0440\u043e\u0441:\\n\", request)\n\n    if request.startswith(\"POST\"):\n        body = request.split(\"\\r\\n\\r\\n\", 1)[1]\n        data = parse_qs(body)\n\n        subject = data.get(\"subject\", [\"\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\"])[0]\n        grade = data.get(\"grade\", [\"-\"])[0]\n\n        if subject not in grades:\n            grades[subject] = []\n        grades[subject].append(grade)\n\n        response_body = f\"\"\"\n        &lt;div class=\"container\"&gt;\n            &lt;h2&gt; \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e: {subject} \u2014 {grade}&lt;/h2&gt;\n            &lt;a href=\"/\"&gt;\u041d\u0430\u0437\u0430\u0434&lt;/a&gt;\n        &lt;/div&gt;\n        \"\"\"\n\n    else:  # GET-\u0437\u0430\u043f\u0440\u043e\u0441\n        response_body = \"&lt;div class='container'&gt;&lt;h1&gt; \u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a&lt;/h1&gt;&lt;table&gt;\"\n        response_body += \"&lt;tr&gt;&lt;th&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430&lt;/th&gt;&lt;th&gt;\u041e\u0446\u0435\u043d\u043a\u0438&lt;/th&gt;&lt;/tr&gt;\"\n\n        for subject, grade_list in grades.items():\n            grades_str = \", \".join(grade_list)\n            response_body += f\"&lt;tr&gt;&lt;td&gt;&lt;b&gt;{subject}&lt;/b&gt;&lt;/td&gt;&lt;td&gt;{grades_str}&lt;/td&gt;&lt;/tr&gt;\"\n\n        response_body += \"&lt;/table&gt;\"\n\n        response_body += \"\"\"\n        &lt;h2&gt;\u2795 \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043e\u0446\u0435\u043d\u043a\u0443&lt;/h2&gt;\n        &lt;form method=\"POST\"&gt;\n            &lt;label&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430:&lt;/label&gt;&lt;br&gt;\n            &lt;input type=\"text\" name=\"subject\" style=\"width:300px; padding:5px;\"&gt;&lt;br&gt;&lt;br&gt;\n            &lt;label&gt;\u041e\u0446\u0435\u043d\u043a\u0430:&lt;/label&gt;&lt;br&gt;\n            &lt;input type=\"text\" name=\"grade\" style=\"width:100px; padding:5px;\"&gt;&lt;br&gt;&lt;br&gt;\n            &lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\" \n                style=\"padding:10px 20px; background:#4682B4; color:white; border:none; border-radius:5px; cursor:pointer;\"&gt;\n        &lt;/form&gt;\n        &lt;/div&gt;\n        \"\"\"\n\n    page = f\"\"\"\n    &lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\"&gt;\n        &lt;title&gt;\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a&lt;/title&gt;\n        &lt;style&gt;\n            body {{\n                background: #87CEFA; /* \u0433\u043e\u043b\u0443\u0431\u043e\u0439 \u0444\u043e\u043d */\n                font-family: Arial, sans-serif;\n                color: #000;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                min-height: 100vh;\n                margin: 0;\n            }}\n            .container {{\n                background: #f0f8ff;\n                padding: 30px;\n                border-radius: 15px;\n                width: 600px;\n                text-align: center;\n                box-shadow: 0 0 20px rgba(0,0,0,0.3);\n            }}\n            table {{\n                width: 100%;\n                border-collapse: collapse;\n                margin-bottom: 20px;\n            }}\n            th, td {{\n                border: 1px solid #4682B4;\n                padding: 10px;\n                text-align: center;\n            }}\n            th {{\n                background: #4682B4;\n                color: white;\n            }}\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        {response_body}\n    &lt;/body&gt;\n    &lt;/html&gt;\n    \"\"\"\n\n    response = \"HTTP/1.1 200 OK\\nContent-Type: text/html; charset=utf-8\\n\\n\" + page\n    conn.send(response.encode(\"utf-8\"))\n    conn.close()\n</code></pre> <p></p>"},{"location":"#_3","title":"\u0412\u044b\u0432\u043e\u0434","text":"<p>\u0412 \u0445\u043e\u0434\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0438\u0437\u0443\u0447\u0435\u043d\u044b \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u0451\u043c\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u0442\u0435\u0432\u044b\u043c\u0438 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\u043c\u0438 \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 socket \u0432 Python.  \u041d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u0445 \u0431\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b: - \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 UDP (\u043e\u0431\u043c\u0435\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u0431\u0435\u0437 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f), - \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 TCP \u0441 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, - HTTP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 index.html, - \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0441 \u043f\u043e\u0442\u043e\u043a\u0430\u043c\u0438, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0438\u0439 \u043e\u0431\u0449\u0430\u0442\u044c\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e, - \u0432\u0435\u0431-\u0436\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 GET \u0438 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0432\u044b\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0432\u0438\u0434\u0435. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u0430: - \u043f\u043e\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430\u043c\u0438 UDP \u0438 TCP; - \u043e\u0441\u0432\u043e\u0438\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432\u0440\u0443\u0447\u043d\u0443\u044e; - \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u043d\u0430\u0432\u044b\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\u044e \u0432 Python; - \u043d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u044b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043d\u043e \u0438 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u0445 \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u0438\u0445 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u0442\u0435\u0432\u044b\u0435 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b.</p>"}]}